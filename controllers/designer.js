const mysql = require('mysql');

const db = mysql.createConnection({
	host		: process.env.DATABASE_HOST,
	user		: process.env.DATABASE_USER,
	password	: process.env.DATABASE_PASSWORD,
	database	: process.env.DATABASE_NAME
});

db.connect((err) => {
	if (err) throw err;
	else {
		console.log('mysql connected auth');
	}
});

exports.personalPage = (req, res) => {
	const login = req.query.login;
	if (login) {
		db.query("SELECT * FROM users WHERE login = ?", login, async (err, results) => {
			if (err)
				throw err;
			authorized = req.query.authorized;
			res.render('designer/designer', {
				login : results[0].login,
				name : results[0].name,
				lan_geo : results[0].lan_geo,
				email : results[0].email,
				authorized : authorized,
			});
		});
	}
	else {
		res.send("anonymous designer's personal page");
	}
}

exports.GETCreateRecord = (req, res) => {
	//just add those to the new record
	const code = req.query.code; // perhapse autogenerated
	const content = req.query.content;
	const height = req.query.hight;
	const width = req.query.width;
	const ppi = req.query.ppi;
	const version = 1;
	const designer_login = req.query.login;
	let date;
	date = new Date();
	date = date.getUTCFullYear() + '-' +
		('00' + (date.getUTCMonth()+1)).slice(-2) + '-' +
		('00' + date.getUTCDate()).slice(-2) + ' ' +
		('00' + date.getUTCHours()).slice(-2) + ':' +
		('00' + date.getUTCMinutes()).slice(-2) + ':' +
		('00' + date.getUTCSeconds()).slice(-2);
	// parent_id will be null

	let lan_geo = req.query.lan_geo;
	// if (!lan_geo) {
	// 	db.query("select lan_geo from users where login = ?", designer_login, (err, results) => {
	// 		if (err) throw err;
	// 		else {
	// 			lan_geo = results[0].lan_geo;
	// 		}
	// 	})
	// }

	const grabfile = req.files.grab;
	const previewfile = req.files.preview;
	const psdfile = req.files.psd;

	grabfile.mv(`/uploads/${grabfile.name}`, (err) => {
		if (err)
		  return res.status(500).send(err);
	});

	previewfile.mv(`/uploads/${previewfile.name}`, (err) => {
		if (err)
		  return res.status(500).send(err);
	});

	psdfile.mv(`/uploads/${psdfile.name}`, (err) => {
		if (err)
		  return res.status(500).send(err);
	});

	const os = req.query.os;
	const device = req.query.device;
	let ossql;
	let devsql;
	if (os)
	{
		ossql = `select * from os where nickname = "${os}"`;
		if (device) // not undefined if passing /?device=undefined
			devsql = `select * from devices where nickname = "${device}"`;
		else
		{
			devsql = `select devices.nickname as nickname, devices.name as name
			from
			devices inner join
			(select *
			from os_dev_comp
			where os_nick = "${os}") tmp
			on devices.nickname = tmp.dev_nick`
		}
	}
	else
	{
		ossql = `select * from os`;
		devsql = `select * from devices where nickname = "nodevice"`;
	}

	langeosql = lan_geo ? `select * from lan_geo where lan_geo = "${lan_geo}"` : `select * from lan_geo`;

	db.query(ossql, async (err, osresults) => {
		if(err) throw err;
		else {
			db.query(devsql, async (err, devresults) => {
				if (err) throw err;
				else {
					db.query(langeosql, async (err, lansresults) => {
						if (err) throw err;
						else res.render('designer/create', {
							m_lans : lansresults,
							m_oss : osresults,
							m_devices : devresults
						})
					});
				}
			});
		}
	});
}

exports.POSTCreateRecord = (req, res) => {
	// //just add those to the new record
	// const code = req.query.code; // perhapse autogenerated
	// const content = req.query.content;
	// const height = req.query.hight;
	// const width = req.query.width;
	// const ppi = req.query.ppi;
	// const version = 1;
	// const designer_login = req.query.login;
	// let date;
	// date = new Date();
	// date = date.getUTCFullYear() + '-' +
	// 	('00' + (date.getUTCMonth()+1)).slice(-2) + '-' +
	// 	('00' + date.getUTCDate()).slice(-2) + ' ' +
	// 	('00' + date.getUTCHours()).slice(-2) + ':' +
	// 	('00' + date.getUTCMinutes()).slice(-2) + ':' +
	// 	('00' + date.getUTCSeconds()).slice(-2);
	// // parent_id will be null

	// let lan_geo = req.query.lan_geo;
	// // if (!lan_geo) {
	// // 	db.query("select lan_geo from users where login = ?", designer_login, (err, results) => {
	// // 		if (err) throw err;
	// // 		else {
	// // 			lan_geo = results[0].lan_geo;
	// // 		}
	// // 	})
	// // }

	const grabfile = req.files.grab;
	const previewfile = req.files.preview;
	const psdfile = req.files.psd;
	const tiffile = req.files.tif;

	grabfile.mv(`uploads/${grabfile.name}`, (err) => {
		if (err)
		  return res.status(500).send(err);
	});

	previewfile.mv(`uploads/${previewfile.name}`, (err) => {
		if (err)
		  return res.status(500).send(err);
	});

	psdfile.mv(`uploads/${psdfile.name}`, (err) => {
		if (err)
		  return res.status(500).send(err);
	});

	tiffile.mv(`uploads/${tiffile.name}`, (err) => {
		if (err)
		  return res.status(500).send(err);
	});

	// const os = req.query.os;
	// const device = req.query.device;

	// res.send(code, content, height, width, ppi, grab, preview, psd, tif, lan_geo, os, device, login);
}
